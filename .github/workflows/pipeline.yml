name: Deploy Pipeline

on:
  pull_request:
    branches:
      - main
      - dev
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    permissions: write-all
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to production
        run: echo "Deploying to production"

      - name: Configure SSH Key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Run Command via SSH
        uses: appleboy/ssh-action@master
        with:
          host: 13.70.194.48
          username: azureuser
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -e # Exit immediately if a command fails
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
            cd ~/app/tuni-rooms
            git checkout main
            git pull
            
            # Build the frontend
            echo "Building the frontend"
            cd interface
            npm install
            npm run build
            cp -r dist/* ../server/public/
            cd ..

            # Handle Docker
            docker-compose down || true # Ensure the stack stops
            docker-compose up -d --build
            
            # Migrations and uploads
            docker-compose exec -T server npx prisma migrate dev
            docker-compose exec -T server npx ts-node uploads.ts
